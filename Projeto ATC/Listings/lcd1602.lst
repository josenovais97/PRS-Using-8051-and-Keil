C51 COMPILER V9.60.7.0   LCD1602                                                           01/09/2024 18:44:49 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\lcd1602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd1602.c OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\l
                    -cd1602.lst) TABS(2) OBJECT(.\Objects\lcd1602.obj)

line level    source

   1          #include "lcd1602.h"
   2          #include "i2c-bitbang.h" 
   3          
   4          #define NULL 0
   5          
   6          #define PULSE_PERIOD 500
   7          #define CMD_PERIOD 5000
   8          
   9          #define BACKLIGHT 8
  10          #define DATA 1
  11          static int iBackLight = BACKLIGHT;
  12          
  13          
  14          void wait(unsigned int pulses){
  15   1        int i;
  16   1        
  17   1        for (i = 0; i < pulses; i++);
  18   1      }
  19          
  20          
  21          // Send a command to LCD
  22          //
  23          static void WriteCommand(unsigned char iAddr, unsigned char ucCMD)
  24          {
  25   1      unsigned char uc;
  26   1      unsigned char rc;
  27   1      
  28   1        i2c_start();
  29   1        i2c_write(iAddr);
  30   1        rc = read_ack();
  31   1        
  32   1        uc = (ucCMD & 0xf0) | iBackLight; // most significant nibble sent first 
  33   1        i2c_write(uc);
  34   1        rc = read_ack();
  35   1        
  36   1        wait(PULSE_PERIOD); // manually pulse the clock line
  37   1        uc |= 4; // enable pulse
  38   1        i2c_write(uc);
  39   1        rc = read_ack();
  40   1        
  41   1        wait(PULSE_PERIOD);
  42   1        uc &= ~4; // toggle pulse
  43   1        i2c_write(uc);
  44   1        rc = read_ack();
  45   1        
  46   1        wait(CMD_PERIOD);
  47   1        uc = iBackLight | (ucCMD << 4); // least significant nibble
  48   1        i2c_write(uc);
  49   1        rc = read_ack();
  50   1        
  51   1        wait(PULSE_PERIOD);
  52   1        uc |= 4; // enable pulse
  53   1        i2c_write(uc);
  54   1        rc = read_ack();
C51 COMPILER V9.60.7.0   LCD1602                                                           01/09/2024 18:44:49 PAGE 2   

  55   1        
  56   1        wait(PULSE_PERIOD);
  57   1        uc &= ~4; // toggle pulse
  58   1        i2c_write(uc);
  59   1        rc = read_ack();
  60   1            
  61   1        wait(CMD_PERIOD);
  62   1        
  63   1        i2c_stop();
  64   1      
  65   1      } /* WriteCommand() */
  66          
  67          //
  68          // Write an ASCII string (up to 16 characters at a time)
  69          // 
  70          int lcd1602WriteString(unsigned char iAddr, char *text)
  71          {
  72   1      unsigned char ucTemp;
  73   1      int i = 0;
  74   1      unsigned char rc;
  75   1      
  76   1        if (text == NULL)
  77   1          return 1;
  78   1      
  79   1        i2c_start();
  80   1        i2c_write(iAddr);
  81   1        rc = read_ack();  
  82   1        
  83   1        while (i<16 && *text)
  84   1        {
  85   2          ucTemp = iBackLight | DATA | (*text & 0xf0);
  86   2          i2c_write(ucTemp);
  87   2          rc = read_ack();
  88   2          
  89   2          wait(PULSE_PERIOD);
  90   2          ucTemp |= 4; // pulse E
  91   2          i2c_write(ucTemp);
  92   2          rc = read_ack();
  93   2          
  94   2          wait(PULSE_PERIOD);
  95   2          ucTemp &= ~4;
  96   2          i2c_write(ucTemp);
  97   2          rc = read_ack();
  98   2          
  99   2          wait(PULSE_PERIOD);
 100   2          ucTemp = iBackLight | DATA | (*text << 4);
 101   2          i2c_write(ucTemp);
 102   2          rc = read_ack();
 103   2          
 104   2          ucTemp |= 4; // pulse E
 105   2          i2c_write(ucTemp);
 106   2          rc = read_ack();
 107   2          
 108   2          wait(PULSE_PERIOD);
 109   2          ucTemp &= ~4;
 110   2          i2c_write(ucTemp);
 111   2          rc = read_ack();
 112   2          
 113   2          wait(CMD_PERIOD);
 114   2          text++;
 115   2          i++;
 116   2        }
C51 COMPILER V9.60.7.0   LCD1602                                                           01/09/2024 18:44:49 PAGE 3   

 117   1        
 118   1        i2c_stop();
 119   1        
 120   1        return 0;
 121   1      }
 122          
 123          
 124          // Open a file handle to the I2C device
 125          // Set the controller into 4-bit mode and clear the display
 126          // returns 0 for success, 1 for failure
 127          //
 128          int lcd1602Init(unsigned char iAddr){
 129   1        
 130   1        i2c_start();
 131   1        i2c_write(iAddr);
 132   1        read_ack();
 133   1        i2c_stop();
 134   1        wait(1000);
 135   1        
 136   1        iBackLight = BACKLIGHT; // turn on backlight
 137   1        WriteCommand(iAddr, 0x02); // Set 4-bit mode of the LCD controller
 138   1        WriteCommand(iAddr, 0x28); // 2 lines, 5x8 dot matrix
 139   1        WriteCommand(iAddr, 0x0c); // display on, cursor off
 140   1        WriteCommand(iAddr, 0x06); // inc cursor to right when writing and don't scroll
 141   1        WriteCommand(iAddr, 0x80); // set cursor to row 1, column 1
 142   1        lcd1602Clear(iAddr);      // clear the memory
 143   1      
 144   1        return 0;
 145   1      }
 146          
 147          //
 148          // Erase the display memory and reset the cursor to 0,0
 149          //
 150          int lcd1602Clear(unsigned char iAddr)
 151          {
 152   1        WriteCommand(iAddr, 0x01); // clear the screen
 153   1        return 0;
 154   1      
 155   1      }
 156          
 157          //
 158          // Set the LCD cursor position
 159          //
 160          int lcd1602SetCursor(unsigned char iAddr, unsigned char x, unsigned char y)
 161          {
 162   1      unsigned char cCmd;
 163   1      
 164   1        if (x < 0 || x > 15 || y < 0 || y > 1)
 165   1          return 1;
 166   1      
 167   1        cCmd = (y==0) ? 0x80 : 0xc0;
 168   1        cCmd |= x;
 169   1        WriteCommand(iAddr, cCmd);
 170   1        return 0;
 171   1      
 172   1      } /* lcd1602SetCursor() */
 173          
 174          //
 175          // Control the backlight, cursor, and blink
 176          // The cursor is an underline and is separate and distinct
 177          // from the blinking block option
 178          //
C51 COMPILER V9.60.7.0   LCD1602                                                           01/09/2024 18:44:49 PAGE 4   

 179          int lcd1602Control(unsigned char iAddr, unsigned char bBacklight, unsigned char bCursor, unsigned char bBl
             -ink)
 180          {
 181   1      unsigned char ucCMD = 0xc; // display control
 182   1      
 183   1        iBackLight = (bBacklight) ? BACKLIGHT : 0;
 184   1        if (bCursor)
 185   1          ucCMD |= 2;
 186   1        if (bBlink)
 187   1          ucCMD |= 1;
 188   1        WriteCommand(iAddr, ucCMD);
 189   1        
 190   1        return 0;
 191   1      } /* lcd1602Control() */
 192          
 193          void lcd1602Shutdown(unsigned char iAddr)
 194          {
 195   1        iBackLight = 0; // turn off backlight
 196   1        WriteCommand(iAddr, 0x08); // turn off display, cursor and blink  
 197   1      } /* lcd1602Shutdown() */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    645    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
